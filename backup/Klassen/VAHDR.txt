package schemas;

/*
 * Copyright 2013, Martin Kleehaus
 * Technical University of Munich (TUM)
 * Professorship for Database Systems and Applications
 */

import datagenerator.DataGenerator;
import java.util.Date;
import java.util.HashMap;
import java.util.List;
import java.util.Map;

/**
 *
 * @author Martin Kleehaus
 */
public class SchemaVAHDR extends Schemas  {
    
    private Integer primaryKey = 3405000;
    
    @Override
    public void setUniqueNumber() {
        DataGenerator dg = DataGenerator.getInstance();
        dg.setUniqueNumber(3405000);
    }
    
    @Override
    public Map<String, Object> getData() throws Exception{
        DataGenerator dg = DataGenerator.getInstance();
        TableData tData = TableData.getInstance();
        
        String[] curr = {"EUR","GBP","US"};
        String[] sorg = {"GB30","GB40","GB50", "GB60"};
        String[] dchl = {"01","02","03"};
        String[] risk = {"GBA","GBC","GBH","GBM","GBP"};
        
        Map<String, Double> docCa = new HashMap<>();
        docCa.put("B", 0.55);
        docCa.put("C", 0.89);
        docCa.put("L", 0.898);
        docCa.put("K", 1.00);
        
        Map<String, Double> sc = new HashMap<>();
        docCa.put("01", 0.895);
        docCa.put("11", 0.995);
        docCa.put("07", 1.000);
        
        int cnt = 0;
        
        Map<String, Object> columns = new HashMap<>();        
        columns.put(this.getMetaValues("header")[cnt++],this.getNextPrimaryKey());
        columns.put(this.getMetaValues("header")[cnt++],dg.getRange(docCa)); //DocCa
        columns.put(this.getMetaValues("header")[cnt++],dg.getDateBetween(dg.getDate(2013, 1, 1), dg.getDate(2015,12,31))); //Created on
        columns.put(this.getMetaValues("header")[cnt++],dg.getTime(this.parseDouble(this.getMetaValues("avg")[cnt-1]), this.parseDouble(this.getMetaValues("std")[cnt-1]))); //time
        columns.put(this.getMetaValues("header")[cnt++],tData.getUser(this.parseDouble(this.getMetaValues("sfactor")[cnt-1]), this.parseDouble(this.getMetaValues("change")[cnt-1]), this.getCurrentRow(),this.getLastMapValue(this.getMetaValues("header")[cnt - 1]),Integer.MAX_VALUE)); //created by
        
        if(columns.get("DocCa") == "B") {
            columns.put(this.getMetaValues("header")[cnt++],columns.get("Created on")); //Valid fr
            columns.put(this.getMetaValues("header")[cnt++],dg.getDate(9999, 12, 31)); //Valid to
        } else {
            columns.put(this.getMetaValues("header")[cnt++],null); //Valid fr
            columns.put(this.getMetaValues("header")[cnt++],null); //Valid to            
        }
        columns.put(this.getMetaValues("header")[cnt++],columns.get("Created on")); //Doc Date

        docCateg dc = docCateg.valueOf(columns.get("DocCa").toString());
        switch (dc) {
            case B:
                columns.put(this.getMetaValues("header")[cnt++],2); //TrG
                columns.put(this.getMetaValues("header")[cnt++],"YQ02"); //SaTy
                break;
            case C:
                columns.put(this.getMetaValues("header")[cnt++],0); //TrG
                columns.put(this.getMetaValues("header")[cnt++],"YO1" + dg.getNumberBetween(2, 5).toString()); //SaTy
                break;
            case K:
                columns.put(this.getMetaValues("header")[cnt++],0); //TrG
                columns.put(this.getMetaValues("header")[cnt++],"YK03"); //SaTy
                break;
            case L:
                columns.put(this.getMetaValues("header")[cnt++],0); //TrG
                columns.put(this.getMetaValues("header")[cnt++],"YI04"); //SaTy
                break;     
        }
        columns.put(this.getMetaValues("header")[cnt++],this.getMasterData("ordrs", cnt-1, this.getCurrentRow(), dg.getItem("B0" + dg.getNumberUpTo(9).toString(),0.7,null))); //OrdRs
        if (columns.get("DocCa") == "L") {
            columns.put(this.getMetaValues("header")[cnt++],dg.getCurrency(-75.7083, 49.7340)); //Net val
        } else {
            columns.put(this.getMetaValues("header")[cnt++],dg.getCurrency(25664.25, 105343.7039)); //Net val
        }
        columns.put(this.getMetaValues("header")[cnt++],this.getLastMapValue(dg.getItem(curr), this.getMetaValues("header")[cnt - 1], 0.05)); //Curr
        columns.put(this.getMetaValues("header")[cnt++],this.getLastMapValue(dg.getItem(sorg), this.getMetaValues("header")[cnt - 1], 0.05)); //SOrg
        columns.put(this.getMetaValues("header")[cnt++],this.getLastMapValue(dg.getItem(dchl), this.getMetaValues("header")[cnt - 1], 0.05)); //DChl
        columns.put(this.getMetaValues("header")[cnt++],this.getLastMapValue(dg.getNumberUpTo(9)*10,this.getMetaValues("header")[cnt - 1], this.parseDouble(this.getMetaValues("change")[cnt - 1]))); //Dv
        columns.put(this.getMetaValues("header")[cnt++],this.getLastMapValue(dg.getNumberUpTo(9)*10,this.getMetaValues("header")[cnt - 1], this.parseDouble(this.getMetaValues("change")[cnt - 1]))); //Sgrp
        columns.put(this.getMetaValues("header")[cnt++],this.getLastMapValue(dg.getNumberUpTo(9)*10,this.getMetaValues("header")[cnt - 1], this.parseDouble(this.getMetaValues("change")[cnt - 1]))); //Soff
        columns.put(this.getMetaValues("header")[cnt++],"00" + dg.getNumberBetween(20000000, 29999999).toString()); //Doccond
        columns.put(this.getMetaValues("header")[cnt++],dg.getDate((Date)columns.get("Created on"), this.parseDouble(this.getMetaValues("avg")[cnt-1]), this.parseDouble(this.getMetaValues("std")[cnt-1]))); // Req.dlv.dt
        columns.put(this.getMetaValues("header")[cnt++], "1"); //
        if (columns.get("DocCa") == "C") {
            columns.put(this.getMetaValues("header")[cnt++],"F"); //I
        } else if (columns.get("DocCa") == "L") {
            columns.put(this.getMetaValues("header")[cnt++],"D"); //I
        } else {
            columns.put(this.getMetaValues("header")[cnt++],null); //I
        }
        columns.put(this.getMetaValues("header")[cnt++], "ZGB100"); //PriPbr
        columns.put(this.getMetaValues("header")[cnt++],dg.getRange(sc)); //SC
        if (columns.get("DocCa") == "B") {
            columns.put(this.getMetaValues("header")[cnt++],"F5"); //OrBit
        } else if (columns.get("DocCa") == "K") {
            columns.put(this.getMetaValues("header")[cnt++],"YK03"); //OrBit
        } else if (columns.get("DocCa") == "L") {
            columns.put(this.getMetaValues("header")[cnt++],"YD03"); //OrBit
        } else {
            columns.put(this.getMetaValues("header")[cnt++],null); //OrBit
        }
        if (columns.get("DocCa") == "B") {
            columns.put(this.getMetaValues("header")[cnt++],dg.getNumberUpTo(9)*10); //Prb
        }else {
            columns.put(this.getMetaValues("header")[cnt++],100); //Prb
        }
        if ("100".equals(columns.get("Prb").toString())) {
            columns.put(this.getMetaValues("header")[cnt++],dg.getRandomChars(2, 10) + "/" + dg.getNumberUpTo(10000).toString()); //Order number
        }else {
            columns.put(this.getMetaValues("header")[cnt++],dg.getItem(dg.getRandomChars(2, 10) + "/" + dg.getNumberUpTo(10000).toString(),0.10,null)); //Order number
        }
        if ("100".equals(columns.get("Prb").toString())) {
            columns.put(this.getMetaValues("header")[cnt++],this.getMasterData("potyp", cnt-1, this.getCurrentRow(), dg.getItem(dg.getRandomChars(4).toUpperCase(),0.60,null))); //potyp
        } else {
             columns.put(this.getMetaValues("header")[cnt++],null); //potyp
        }
        columns.put(this.getMetaValues("header")[cnt++],columns.get("Created on")); //PO Date
        columns.put(this.getMetaValues("header")[cnt++],tData.getSoldto(this.parseDouble(this.getMetaValues("sfactor")[cnt-1]), this.parseDouble(this.getMetaValues("change")[cnt-1]), this.getCurrentRow(),this.getLastMapValue(this.getMetaValues("header")[cnt - 1]),Integer.MAX_VALUE)); //sold-to pt
        columns.put(this.getMetaValues("header")[cnt++],dg.getItem(dg.getLastName(),0.90,null)); //Name of the orderer
        columns.put(this.getMetaValues("header")[cnt++],tData.getSoldto("telephone", columns.get("Sold-to pt").toString()));
        columns.put(this.getMetaValues("header")[cnt++],columns.get("Created on")); //Last cont
        columns.put(this.getMetaValues("header")[cnt++],dg.getDate((Date)columns.get("Created on"), this.parseDouble(this.getMetaValues("avg")[cnt-1]), this.parseDouble(this.getMetaValues("std")[cnt-1]))); //changed on
        columns.put(this.getMetaValues("header")[cnt++],this.getLastMapValue("GB" + dg.getNumberUpTo(9) + "0",this.getMetaValues("header")[cnt - 1],0.5)); //COAr
        columns.put(this.getMetaValues("header")[cnt++],"GB00"); //CAr
        columns.put(this.getMetaValues("header")[cnt++],tData.getSoldto("Cred. acct", columns.get("Sold-to pt").toString())); //Cred acct
        columns.put(this.getMetaValues("header")[cnt++],tData.getSoldto("Cred", columns.get("Sold-to pt").toString())); //Cred
        columns.put(this.getMetaValues("header")[cnt++],tData.getSoldto("Cred.rep.grp", columns.get("Sold-to pt").toString())); //Cred.rep.grp
        columns.put(this.getMetaValues("header")[cnt++],this.getLastMapValue(dg.getItem(risk),this.getMetaValues("header")[cnt - 1],this.parseDouble(this.getMetaValues("change")[cnt-1]))); //risk
        if ("100".equals(columns.get("Prb").toString())) {
            columns.put(this.getMetaValues("header")[cnt++],"A"); //HPr
        }else {
            columns.put(this.getMetaValues("header")[cnt++],null); //HPr
        }
        if (columns.get("DocCa") == "C") {
            columns.put(this.getMetaValues("header")[cnt++],null); //Usage
        } else if (columns.get("DocCa") == "L") {
            columns.put(this.getMetaValues("header")[cnt++],"B0B"); //Usage
        } else if (columns.get("DocCa") == "K") {
            columns.put(this.getMetaValues("header")[cnt++],dg.getItem("B0B",0.50,"B0E")); //Usage
        } else {
            columns.put(this.getMetaValues("header")[cnt++],this.getMasterData("Usage", cnt-1, this.getCurrentRow(), "B" + dg.getNumberBetween(10, 99).toString())); //Usage
        }
        if (columns.get("DocCa") == "C") {
            columns.put(this.getMetaValues("header")[cnt++],dg.getDate((Date)columns.get("Created on"), this.parseDouble(this.getMetaValues("avg")[cnt-1]), this.parseDouble(this.getMetaValues("std")[cnt-1]))); //MatAvDt
        } else {
            columns.put(this.getMetaValues("header")[cnt++],columns.get("Created on")); //MatAvDt
        }
            
        this.setMap(columns);
        
        return columns;
    }
   
    
    @Override
    public String getName() {
        return this.getClass().getSimpleName().replace("Schema", "");
    }
   
    @Override
    public Integer getPrimaryKey () {
        if (this.primaryKey == null) {
            this.setPrimaryKey(1);
            return this.getPrimaryKey();
        }
        return this.primaryKey;
    }
    
    @Override
    public Integer getNextPrimaryKey() {
        if (this.primaryKey == null) {
            this.setPrimaryKey(1);
            return this.getPrimaryKey();
        }
        return this.primaryKey++;
    }
    
    @Override
    public void setPrimaryKey (Integer key) {
        this.primaryKey = key;
    }

    @Override
    public Integer getRandomRowCount() {
        return 1;
    }
    
    @Override
    public Integer getDefaultPrimaryKey() {
        return 1;
    }
    
    private void setTableData(Map<String, List<Object>> map) {
        
    }
    
    private enum docCateg {
        B,
        C,
        K,
        L
    }
}
